{"version":3,"sources":["assets/logo-star-wars.png","assets/card-planeta-frente.png","components/button/Button.js","pages/start/Start.js","components/card/Card.js","services/planet.service.js","pages/game/Game.js","stores/actions/planet.actions.js","Routes.js","App.js","stores/reducers/planet.reducers.js","stores/index.js","index.js"],"names":["module","exports","Button","props","buttonClass","disabled","bgColor","bgColorDisabled","buttonStyles","backgroundColor","width","height","marginTop","marginBottom","marginLeft","marginRight","paddingTop","paddingBottom","paddingLeft","paddingRight","display","border","cursor","borderRadius","fontSize","fontFamily","className","type","style","onClick","isLoading","title","Start","state","redirectToGame","goToGame","setState","this","to","src","logoStarWars","alt","Component","Card","planets","isFlipped","frontCard","name","population","climate","terrain","films","length","getPlanet","a","async","idPlanet","Math","floor","random","axios","get","response","Game","redirectToStart","cardIsFlipped","goToStart","flipCard","connect","planet","success","error","dispatch","Service","payload","data","Routes","exact","path","component","App","INITIAL_STATE","action","combine","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c84b9e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-star-wars.c1b068ab.png\";","module.exports = __webpack_public_path__ + \"static/media/card-planeta-frente.a8f978b8.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Button.scss\";\n\nconst Button = props => {\n  const buttonClass = \"btn\" + (props.disabled ? \" disabled\" : \"\");\n  const bgColor = props.bgColor || \"#D7362A\";\n  const bgColorDisabled = props.bgColorDisabled || \"#ccc\";\n  const buttonStyles = {\n    backgroundColor: props.disabled ? bgColorDisabled : bgColor,\n    width: props.width || \"auto\",\n    height: props.height || \"40px\",\n    marginTop: props.marginTop || \"10px\",\n    marginBottom: props.marginBottom || \"10px\",\n    marginLeft: props.marginLeft || \"40px\",\n    marginRight: props.marginRight || \"40px\",\n    paddingTop: props.paddingTop || \"0px\",\n    paddingBottom: props.paddingBottom || \"0px\",\n    paddingLeft: props.paddingLeft || \"40px\",\n    paddingRight: props.paddingRight || \"40px\",\n    display: props.display || \"flex\",\n    border: \"none\",\n    cursor: \"pointer\",\n    borderRadius: props.borderRadius || \"5px\",\n    fontSize: props.fontSize || \"1.5em\",\n    fontFamily: props.fontFamily || \"Arial\"\n  };\n\n  const defaultFunc = () => {\n    return;\n  };\n\n  return (\n    <>\n      <section className=\"buttonContainer\">\n        <button\n          type={props.type || \"button\"}\n          className={buttonClass}\n          style={buttonStyles}\n          onClick={\n            !props.isLoading && typeof props.onClick === \"function\"\n              ? props.onClick\n              : defaultFunc\n          }\n        >\n          {props.isLoading ? <div className=\"loading-box\" /> : props.title}\n        </button>\n      </section>\n    </>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n  marginBottom: PropTypes.string,\n  marginLeft: PropTypes.string,\n  marginTop: PropTypes.string,\n  marginRight: PropTypes.string,\n  paddingBottom: PropTypes.string,\n  paddingLeft: PropTypes.string,\n  paddingRight: PropTypes.string,\n  paddingTop: PropTypes.string,\n  display: PropTypes.string,\n  borderRadius: PropTypes.string,\n  fontSize: PropTypes.string,\n  fontFamily: PropTypes.string\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport logoStarWars from \"../../assets/logo-star-wars.png\";\nimport \"./Start.scss\";\nimport Button from \"../../components/button/Button\";\n\nclass Start extends Component {\n  state = {\n    redirectToGame: false\n  };\n\n  goToGame = () => {\n    this.setState({ redirectToGame: true });\n  };\n\n  render() {\n    if (this.state.redirectToGame) return <Redirect to={\"/game\"} />;\n\n    return (\n      <>\n        <section className=\"startArea\">\n          <img src={logoStarWars} alt=\"Star Wars game\" className=\"startLogo\" />\n          <Button\n            title=\"Press Start\"\n            width=\"300px\"\n            height=\"45px\"\n            marginTop=\"30px\"\n            borderRadius=\"3px\"\n            fontFamily=\"Avenir Next Condensed\"\n            fontSize=\"1.5rem\"\n            onClick={this.goToGame}\n          />\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Start;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Card.scss\";\nimport frontCard from \"../../assets/card-planeta-frente.png\";\n\nconst Card = props => {\n  const { planets, isFlipped } = props;\n\n  return (\n    <>\n      <section className=\"cardContainer\">\n        <div className={`card ${isFlipped ? \"isFlipped\" : \"\"}`}>\n          <div className=\"frontCard\">\n            <img src={frontCard} alt=\"random card\" className=\"frontCard\" />\n          </div>\n          <div className=\"backCard\">\n            <span className=\"cardTitle\">{planets.name}</span>\n            <span className=\"cardInfo\">Population: {planets.population}</span>\n            <span className=\"cardInfo\">Climate: {planets.climate}</span>\n            <span className=\"cardInfo\">Terrain: {planets.terrain}</span>\n            <span className=\"cardInfo\">\n              Featured in {planets && planets.films && planets.films.length}{\" \"}\n              movies\n            </span>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nCard.propTypes = {\n  planets: PropTypes.object.isRequired,\n  isFlipped: PropTypes.bool.isRequired\n};\n\nexport default Card;\n","import axios from \"axios\";\n\nexport const getPlanet = async () => {\n  let idPlanet = Math.floor(Math.random() * 61 + 1);\n  const response = await axios.get(`https://swapi.co/api/planets/${idPlanet}`);\n  return response;\n};\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"./Game.scss\";\nimport Card from \"../../components/card/Card\";\nimport Button from \"../../components/button/Button\";\nimport { getPlanet } from \"../../stores/actions/planet.actions\";\n\nclass Game extends Component {\n  state = {\n    redirectToStart: false,\n    cardIsFlipped: false\n  };\n\n  goToStart = () => {\n    this.setState({ redirectToStart: true });\n  };\n\n  flipCard = () => {\n    this.setState({ cardIsFlipped: !this.state.cardIsFlipped });\n    this.props.getPlanet();\n  };\n\n  componentDidMount() {\n    this.props.getPlanet();\n  }\n\n  render() {\n    if (this.state.redirectToStart) return <Redirect to={\"/\"} />;\n\n    const { planets, isLoading } = this.props;\n    const { cardIsFlipped } = this.state;\n\n    return (\n      <>\n        <section className=\"gameArea\">\n          <Card\n            planets={planets}\n            isLoading={isLoading}\n            isFlipped={cardIsFlipped}\n          />\n          <Button\n            title=\"Flip Card\"\n            width=\"300px\"\n            height=\"45px\"\n            marginTop=\"50px\"\n            borderRadius=\"3px\"\n            fontFamily=\"Avenir Next Condensed\"\n            fontSize=\"1.5rem\"\n            onClick={this.flipCard}\n          />\n          <Button\n            title=\"Exit\"\n            width=\"300px\"\n            height=\"45px\"\n            marginTop=\"30px\"\n            borderRadius=\"3px\"\n            fontFamily=\"Avenir Next Condensed\"\n            fontSize=\"1.5rem\"\n            onClick={this.goToStart}\n          />\n        </section>\n      </>\n    );\n  }\n}\n\nexport default connect(\n  state => {\n    const planets = (state && state.planet && state.planet.success) || {};\n    const isLoading = state.planet.isLoading;\n    const error = state.planet.error;\n    return {\n      planets,\n      isLoading,\n      error\n    };\n  },\n  { getPlanet }\n)(Game);\n","import * as Service from \"../../services/planet.service\";\n\nconst requestGetPlanet = () => ({\n  type: \"REQUEST_GET_PLANET\"\n});\n\nconst successGetPlanet = payload => ({\n  type: \"SUCCESS_GET_PLANET\",\n  payload\n});\n\nconst errorGetPlanet = error => ({\n  type: \"ERROR_GET_PLANET\",\n  error\n});\n\nexport const getPlanet = () => async dispatch => {\n  dispatch(requestGetPlanet());\n  try {\n    const response = await Service.getPlanet();\n    dispatch(successGetPlanet(response.data));\n    return true;\n  } catch (err) {\n    dispatch(errorGetPlanet(err));\n    return;\n  }\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Start from \"./pages/start/Start\";\nimport Game from \"./pages/game/Game\";\n\nclass Routes extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Start} />\n          <Route path=\"/game\" component={Game} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\n\nimport \"./base.scss\";\nimport Routes from \"./Routes\";\n\nconst App = () => {\n  return <Routes />;\n};\n\nexport default App;\n","const INITIAL_STATE = {\n  data: [],\n  isLoading: false,\n  success: \"\",\n  error: false\n};\n\nconst getPlanet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"REQUEST_GET_PLANET\":\n      return {\n        ...state,\n        isLoading: true,\n        error: false\n      };\n    case \"SUCCESS_GET_PLANET\":\n      return {\n        ...state,\n        isLoading: false,\n        success: action.payload\n      };\n    case \"ERROR_GET_PLANET\":\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n};\n\nexport default getPlanet;\n","import { combineReducers } from \"redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport planet from \"./reducers/planet.reducers\";\n\nconst combine = combineReducers({\n  planet\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(combine, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport \"./base.scss\";\nimport store from \"./stores\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}